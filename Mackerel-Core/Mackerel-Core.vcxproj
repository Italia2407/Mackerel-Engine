<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="ext\Dear-ImGui 1.89.2\backends\imgui_impl_glfw.cpp" />
    <ClCompile Include="ext\Dear-ImGui 1.89.2\backends\imgui_impl_opengl3.cpp" />
    <ClCompile Include="ext\Dear-ImGui 1.89.2\imgui.cpp" />
    <ClCompile Include="ext\Dear-ImGui 1.89.2\imgui_demo.cpp" />
    <ClCompile Include="ext\Dear-ImGui 1.89.2\imgui_draw.cpp" />
    <ClCompile Include="ext\Dear-ImGui 1.89.2\imgui_tables.cpp" />
    <ClCompile Include="ext\Dear-ImGui 1.89.2\imgui_widgets.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\API\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\API\logbuilder.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\async\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\async\prog.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\boost\deque.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\boost\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\boost\list.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\boost\map.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\boost\set.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\boost\string.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\boost\vector.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\gtkmm\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\gtkmm\hello_gtkmm\main.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\gtkmm\hello_gtkmm\window.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\gtkmm\sigc++.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\gtkmm\ustring.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\MinGW\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\MinGW\prog.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\OpenGL\basic.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\OpenGL\Cube\imageloader.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\OpenGL\Cube\main.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\OpenGL\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\basic\main.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\fast-dictionary\listwithsearch.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\fast-dictionary\main.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\fast-dictionary\mainwindow.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\fast-dictionary\moc_listwithsearch.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\fast-dictionary\moc_mainwindow.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\about.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\addsplittedfiledialog.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\joinercore.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\joinerwidget.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\main.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\mainwindow.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\partprocessor.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\splitablefiledelegate.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\splittercore.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\splitterwidget.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\shared-lib\myapp\main.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\Qt\shared-lib\mylib\mylib.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\send-to-network\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\send-to-network\network-logger.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\all-logs.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\autospace.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\check-macros.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\conditional.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\configurator.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\containers.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\crash.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\custom-class.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\custom-crash-handler.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\custom-format-spec.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\custom-performance-output.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\default-configurations.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\default-log-file-from-arg.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\del-logger.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\different-output.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\flags.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\global-configuration.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\helpers.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\locale.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\log-dispatch-callback.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\loggable.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\logger-log-functions.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\logrotate-pthread.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\logrotate.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\make-loggable.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\manipulators.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\multi-loggers-to-same-file.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\multi-loggers-with-async.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\multiple-loggers.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\new-logger-registration-callback.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\no-default-log-file.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\occasional.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\plog.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\post-performance-tracking-handler.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\pthread.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\roll-out.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\shared-static-libs\lib\mylib.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\shared-static-libs\myapp.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\smart-pointer-null-check.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\std-array.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\syslog.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\thread-names.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\timed-block.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\timed-scope.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\verbose.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\STL\very-basic.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\VC++\VCPP2015_Win32\VCPP2015_Win32\easylogging++.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\VC++\VCPP2015_Win32\VCPP2015_Win32\main.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\VC++\VCPP2015_Win32_Multithreaded\VCPP2015_Win32\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\VC++\VCPP2015_Win32_Multithreaded\VCPP2015_Win32\main.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\wxWidgets\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\wxWidgets\wxhashmap.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\wxWidgets\wxhashset.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\wxWidgets\wxlist.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\wxWidgets\wxlonglong.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\wxWidgets\wxstring.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\samples\wxWidgets\wxvector.cpp" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\src\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\test\easylogging++.cc" />
    <ClCompile Include="ext\easyloggingpp-9.97.0\test\main.cc" />
    <ClCompile Include="ext\GLAD\src\glad.c" />
    <ClCompile Include="src\Entity.cpp" />
    <ClCompile Include="src\EntityFactory.cpp" />
    <ClCompile Include="src\EntityPool.cpp" />
    <ClCompile Include="src\MaterialLibrary.cpp" />
    <ClCompile Include="src\Material.cpp" />
    <ClCompile Include="src\MeshLibrary.cpp" />
    <ClCompile Include="src\RenderBatch.cpp" />
    <ClCompile Include="src\Renderer.cpp" />
    <ClCompile Include="src\ShaderLibrary.cpp" />
    <ClCompile Include="src\TestComponent.cpp" />
    <ClCompile Include="src\Texture.cpp" />
    <ClCompile Include="src\TextureLibrary.cpp" />
    <ClCompile Include="src\UniformData.cpp" />
    <ClCompile Include="src\Window.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="ext\Dear-ImGui 1.89.2\backends\imgui_impl_glfw.h" />
    <ClInclude Include="ext\Dear-ImGui 1.89.2\backends\imgui_impl_opengl3.h" />
    <ClInclude Include="ext\Dear-ImGui 1.89.2\backends\imgui_impl_opengl3_loader.h" />
    <ClInclude Include="ext\Dear-ImGui 1.89.2\imconfig.h" />
    <ClInclude Include="ext\Dear-ImGui 1.89.2\imgui.h" />
    <ClInclude Include="ext\Dear-ImGui 1.89.2\imgui_internal.h" />
    <ClInclude Include="ext\Dear-ImGui 1.89.2\imstb_rectpack.h" />
    <ClInclude Include="ext\Dear-ImGui 1.89.2\imstb_textedit.h" />
    <ClInclude Include="ext\Dear-ImGui 1.89.2\imstb_truetype.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\API\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\async\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\async\mymath.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\boost\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\gtkmm\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\gtkmm\hello_gtkmm\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\gtkmm\hello_gtkmm\window.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\MinGW\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\OpenGL\Cube\imageloader.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\OpenGL\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\basic\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\basic\mythread.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\fast-dictionary\listwithsearch.hh" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\fast-dictionary\mainwindow.hh" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\fast-dictionary\ui_mainwindow.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\about.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\addsplittedfiledialog.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\joinercore.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\joinerwidget.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\mainwindow.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\partprocessor.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\splitablefiledelegate.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\splittercore.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\file-splitter-joiner\splitterwidget.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\shared-lib\myapp\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\shared-lib\mylib\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\shared-lib\mylib\mylib.hh" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\Qt\shared-lib\mylib\mylib_global.hh" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\send-to-network\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\STL\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\STL\shared-static-libs\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\STL\shared-static-libs\lib\include\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\STL\shared-static-libs\lib\include\mylib.hpp" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\VC++\VCPP2015_Win32\VCPP2015_Win32\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\VC++\VCPP2015_Win32_Multithreaded\VCPP2015_Win32\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\samples\wxWidgets\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\src\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\command-line-args-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\configurations-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\custom-format-specifier-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\date-utils-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\easylogging++.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\enum-helper-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\file-utils-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\format-specifier-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\global-configurations-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\helpers-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\hit-counter-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\log-format-resolution-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\loggable-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\logger-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\macros-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\os-utils-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\plog-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\post-log-dispatch-handler-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\registry-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\strict-file-size-check-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\string-utils-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\syslog-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\typed-configurations-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\utilities-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\verbose-app-arguments-test.h" />
    <ClInclude Include="ext\easyloggingpp-9.97.0\test\write-all-test.h" />
    <ClInclude Include="ext\GLAD\include\glad\glad.h" />
    <ClInclude Include="ext\GLAD\include\KHR\khrplatform.h" />
    <ClInclude Include="ext\nlohmann\json.hpp" />
    <ClInclude Include="ext\nlohmann\json_fwd.hpp" />
    <ClInclude Include="resource.h" />
    <ClInclude Include="src\Component.h" />
    <ClInclude Include="src\Entity.h" />
    <ClInclude Include="src\EntityFactory.h" />
    <ClInclude Include="src\EntityPool.h" />
    <ClInclude Include="src\Light.h" />
    <ClInclude Include="src\Material.h" />
    <ClInclude Include="src\MaterialEnum.h" />
    <ClInclude Include="src\Mesh.h" />
    <ClInclude Include="src\MaterialLibrary.h" />
    <ClInclude Include="src\MeshEnum.h" />
    <ClInclude Include="src\RenderBatch.h" />
    <ClInclude Include="src\Renderer.h" />
    <ClInclude Include="src\Shader.h" />
    <ClInclude Include="src\ShaderEnum.h" />
    <ClInclude Include="src\ShaderLibrary.h" />
    <ClInclude Include="src\TestComponent.h" />
    <ClInclude Include="src\Texture.h" />
    <ClInclude Include="src\TextureEnum.h" />
    <ClInclude Include="src\TextureLibrary.h" />
    <ClInclude Include="src\UniformData.h" />
    <ClInclude Include="src\Window.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="res\Shaders\vert\perspective.glsl" />
    <None Include="src\MaterialDiagram.cd" />
    <None Include="src\unlit.glsl" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="Mackerel-Core1.rc" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{28a0d958-888d-45b5-a8c0-406123f3d073}</ProjectGuid>
    <RootNamespace>MackerelCore</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <AdditionalIncludeDirectories>$(SolutionDIR)\Mackerel-Core\ext\Eigen 3.4.0;$(SolutionDIR)\Mackerel-Core\ext\GLFW 3.3.8\include;$(SolutionDIR)\Mackerel-Core\ext\GLAD\include;$(SolutionDIR)\Mackerel-Core\ext\Dear-ImGui 1.89.2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>
      </SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <AdditionalDependencies>glfw3.lib;opengl32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDIR)\Mackerel-Core\ext\GLFW 3.3.8\lib-vc2022;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <AdditionalIncludeDirectories>$(SolutionDIR)\Mackerel-Core\ext\Eigen 3.4.0;$(SolutionDIR)\Mackerel-Core\ext\GLFW 3.3.8\include;$(SolutionDIR)\Mackerel-Core\ext\GLAD\include;$(SolutionDIR)\Mackerel-Core\ext\Dear-ImGui 1.89.2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>
      </SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <AdditionalDependencies>glfw3.lib;opengl32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDIR)\Mackerel-Core\ext\GLFW 3.3.8\lib-vc2022;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>
      </PrecompiledHeaderFile>
      <AdditionalIncludeDirectories>$(SolutionDIR)\Mackerel-Core\ext\Eigen 3.4.0;$(SolutionDIR)\Mackerel-Core\ext\GLFW 3.3.8\include;$(SolutionDIR)\Mackerel-Core\ext\GLAD\include;$(SolutionDIR)\Mackerel-Core\ext\Dear-ImGui 1.89.2</AdditionalIncludeDirectories>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <TreatWarningAsError>true</TreatWarningAsError>
    </ClCompile>
    <Link>
      <SubSystem>
      </SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <AdditionalDependencies>glfw3.lib;opengl32.lib</AdditionalDependencies>
    </Lib>
    <Lib>
      <AdditionalLibraryDirectories>$(SolutionDIR)\Mackerel-Core\ext\GLFW 3.3.8\lib-vc2022;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <AdditionalIncludeDirectories>$(SolutionDIR)\Mackerel-Core\ext\Eigen 3.4.0;$(SolutionDIR)\Mackerel-Core\ext\GLFW 3.3.8\include;$(SolutionDIR)\Mackerel-Core\ext\GLAD\include;$(SolutionDIR)\Mackerel-Core\ext\Dear-ImGui 1.89.2;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>
      </SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <AdditionalDependencies>glfw3.lib;opengl32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDIR)\Mackerel-Core\ext\GLFW 3.3.8\lib-vc2022;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>